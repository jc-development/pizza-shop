{"version":3,"sources":["webpack:///./shared/components/main-site-header/secondary-nav/index.js","webpack:///./shared/components/main-site-header/secondary-nav/assets/utils/secondaryNavAnimations.js"],"names":["items","connect","secondaryNavState","isOpen","secondaryNavVideo","loadSecondaryNavLinkVideo","props","menuRef","useRef","videoRef","tl","useState","TimelineMax","paused","useEffect","to","current","top","autoAlpha","onComplete","console","log","useSecondaryMenuTL","play","reverse","then","error","hyphenate","str","replace","listGroups","groupTitleArr","groupItemsArr","map","groupTitle","t","key","listGroupItems","handleHover","item","title","arr","i","onMouseEnter","onMouseLeave","ref","className","muted","src","Object","keys","values"],"mappings":"wKAQMA,G,UAAQ,CACZ,CACE,OAAU,CACR,WACA,YACA,WACA,UAGJ,CACE,WAAY,CACV,UACA,gBACA,eACA,QACA,aAGJ,CACE,MAAS,CACP,UACA,WACA,qBAqESC,6BALS,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,kBAEzB,MAAO,CAAEC,OAD6BD,EAA9BC,OACSC,kBADqBF,EAAtBE,qBAIsB,CAAEC,+BAA3BJ,EA/DM,SAAAK,GACnB,IAAMC,EAAUC,mBACVC,EAAWD,mBAEXE,ECrC0B,SAACH,GAAY,MACvBI,mBAAU,IAAIC,cAAY,CAAEC,QAAQ,KADb,WACrCH,EADqC,UAY7C,OATAI,qBAAU,WACRJ,EACGK,GACCR,EAAQS,QACR,IACA,CAAEC,IAAK,KAAMC,UAAW,EAAGC,WAAY,kBAAMC,QAAQC,IAAI,mBAE5D,IAEIX,EDyBIY,CAAmBf,GAE9BO,qBAAU,WACRR,EAAMH,OAASO,EAAGa,OAASb,EAAGc,YAC7B,CAAClB,EAAMH,SAEVW,qBAAU,WACwB,OAA5BR,EAAMF,mBACcK,EAASO,QAAQO,OAGpCE,MACC,kBAAML,QAAQC,IAAI,qBAFtB,OAKI,SAAAK,GAAK,OAAIN,QAAQC,IAAI,UAAWK,QAGrC,CAACpB,EAAMF,oBAEV,IAAMuB,EAAY,SAAAC,GAAG,OAAIA,EAAIC,QAAS,KAAM,MAItCC,EAAa,SAACC,EAAeC,GAAhB,OAAkCD,EAAcE,KAAK,SAACC,EAAYC,GAAb,OAAmB,wBAAIC,IAAKD,GAAG,4BAAKD,GAAiBG,EAAeH,EAAYF,QAElJM,EAAc,SAACC,GAAD,OAAUjC,EAAMD,0BAA0BkC,IAExDF,EAAiB,SAACG,EAAOC,GAAR,OAAgBA,EAAIR,KAAK,SAACjC,EAAO0C,GAAR,OAAc1C,EAAMiC,KAAK,SAACM,EAAMG,GAAP,OAAa,wBAAIN,IAAKM,GAAG,kBAAC,OAAD,CAAMC,aAAc,kBAAML,EAAaX,EAAUY,KAASK,aAAc,kBAAMN,EAAY,OAAOvB,GAAE,WAAQY,EAAUa,GAAlB,YAA6Bb,EAAUY,KAAWA,WAWvP,OACE,yBAAKM,IAAKtC,EAASuC,UAAU,iBAVwB,OAA5BxC,EAAMF,kBAC7B,KAGA,2BAAOyC,IAAKpC,EAAUsC,OAAK,GACzB,4BAAQC,IAAI,2EADd,4EAQA,6BACYhD,EArBaiC,KAAK,SAAAO,GAAK,OAAIV,EAAWmB,OAAOC,KAAKV,GAAQS,OAAOE,OAAOX,OAsBpF,4BACE,4BAAI,kBAAC,OAAD,CAAMG,aAAc,kBAAML,EAAY,OAAOvB,GAAG,SAAhD,cACJ,4BAAI,kBAAC,OAAD,CAAM4B,aAAc,kBAAML,EAAY,OAAOvB,GAAG,YAAhD,YACJ,4BAAI,kBAAC,OAAD,CAAM4B,aAAc,kBAAML,EAAY,OAAOvB,GAAG,SAAhD,gB","file":"7.1e481465.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { loadSecondaryNavLinkVideo } from '../../../actions/secondaryNavActions';\nimport { useSecondaryMenuTL } from './assets/utils/secondaryNavAnimations';\n\nimport './assets/css/secondary-nav.css';\n\nconst items = [\n  {\n    \"pizzas\": [\n      \"focaccia\",\n      \"napolitan\",\n      \"sicilian\",\n      \"white\"\n    ]\n  },\n  {\n    \"hot subs\": [\n      \"sausage\",\n      \"eggplant parm\",\n      \"chicken parm\",\n      \"steak\",\n      \"meatball\"\n    ]\n  },\n  {\n    \"wings\": [\n      \"buffalo\",\n      \"barbeque\",\n      \"sweet and sour\"\n    ]\n  }\n];\n\n\nconst SecondaryNav = props => {\n  const menuRef = useRef();\n  const videoRef = useRef();\n\n  const tl = useSecondaryMenuTL(menuRef);\n\n  useEffect(() => {\n    props.isOpen ? tl.play() : tl.reverse();\n  }, [props.isOpen]);\n\n  useEffect(() => {\n    if (props.secondaryNavVideo !== null) {\n      const startPlayback = videoRef.current.play();\n\n      startPlayback\n        .then(\n          () => console.log('video can play')\n        )\n        .catch(\n          error => console.log('error: ', error)\n        );\n    }\n  }, [props.secondaryNavVideo]);\n\n  const hyphenate = str => str.replace( / /g, \"-\" );\n\n  const listItems = arr => arr.map( title => listGroups(Object.keys(title), Object.values(title)) );\n\n  const listGroups = (groupTitleArr, groupItemsArr) => groupTitleArr.map( (groupTitle, t) => <dl key={t}><dt>{groupTitle}</dt>{listGroupItems(groupTitle, groupItemsArr) }</dl> );\n\n  const handleHover = (item) => props.loadSecondaryNavLinkVideo(item);\n\n  const listGroupItems = (title, arr) => arr.map( (items, i) => items.map( (item, i) => <dd key={i}><Link onMouseEnter={() => handleHover( hyphenate(item) )} onMouseLeave={() => handleHover(null)} to={ `\\/${hyphenate(title)}\\/${hyphenate(item)}` }>{item}</Link></dd>) );\n\n  const displayVideo = () => props.secondaryNavVideo === null ?\n      null\n    :\n    (\n      <video ref={videoRef} muted>\n        <source src=\"https://elite-website.s3.amazonaws.com/2020/kure/videos/top-bottom.mp4\" /> // change this to accept a prop so becomes dynamic; PLACEHOLDER for now\n      </video>\n    );\n\n  return (\n    <nav ref={menuRef} className=\"full-page-nav\">\n      { displayVideo() }\n      <div>\n      { listItems(items) }\n      <ul>\n        <li><Link onMouseEnter={() => handleHover(null)} to=\"/menu\">full menu</Link></li>\n        <li><Link onMouseEnter={() => handleHover(null)} to=\"/coupons\">coupons</Link></li>\n        <li><Link onMouseEnter={() => handleHover(null)} to=\"/menu\">cart</Link></li>\n      </ul>\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = ({ secondaryNavState }) => {\n  const { isOpen, secondaryNavVideo } = secondaryNavState;\n  return { isOpen, secondaryNavVideo };\n};\n\nexport default connect(mapStateToProps, { loadSecondaryNavLinkVideo })(SecondaryNav);\n","import React, { useEffect, useState } from 'react';\nimport { TimelineMax } from 'gsap';\n\nexport const useSecondaryMenuTL = (menuRef) => {\n  const [ tl, setTl ] = useState( new TimelineMax({ paused: true }) );\n\n  useEffect(() => {\n    tl\n      .to(\n        menuRef.current,\n        0.25,\n        { top: '0%', autoAlpha: 1, onComplete: () => console.log('onComplete') }\n      )\n  }, []);\n\n  return tl;\n};\n"],"sourceRoot":""}
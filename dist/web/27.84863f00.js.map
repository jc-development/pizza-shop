{"version":3,"sources":["webpack:///../node_modules/shallowequal/index.js","webpack:///./shared/containers/Pizzas.js"],"names":["module","exports","objA","objB","compare","compareContext","ret","call","keysA","Object","keys","keysB","length","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","key","valueA","valueB","Pizzas","this","props","fetchPizzasList","updateNav","match","path","pizzas","map","pizza","i","name","Component","connect","pizzasState"],"mappings":"+GAEAA,EAAOC,QAAU,SAAsBC,EAAMC,EAAMC,EAASC,GAC1D,IAAIC,EAAMF,EAAUA,EAAQG,KAAKF,EAAgBH,EAAMC,QAAQ,EAE/D,QAAY,IAARG,EACF,QAASA,EAGX,GAAIJ,IAASC,EACX,OAAO,EAGT,GAAoB,iBAATD,IAAsBA,GAAwB,iBAATC,IAAsBA,EACpE,OAAO,EAGT,IAAIK,EAAQC,OAAOC,KAAKR,GACpBS,EAAQF,OAAOC,KAAKP,GAExB,GAAIK,EAAMI,SAAWD,EAAMC,OACzB,OAAO,EAMT,IAHA,IAAIC,EAAkBJ,OAAOK,UAAUC,eAAeC,KAAKb,GAGlDc,EAAM,EAAGA,EAAMT,EAAMI,OAAQK,IAAO,CAC3C,IAAIC,EAAMV,EAAMS,GAEhB,IAAKJ,EAAgBK,GACnB,OAAO,EAGT,IAAIC,EAASjB,EAAKgB,GACdE,EAASjB,EAAKe,GAIlB,IAAY,KAFZZ,EAAMF,EAAUA,EAAQG,KAAKF,EAAgBc,EAAQC,EAAQF,QAAO,SAEtC,IAARZ,GAAkBa,IAAWC,EACjD,OAAO,EAIX,OAAO,I,2NCtCHC,E,qJAGFC,KAAKC,MAAMC,kBACXF,KAAKC,MAAME,UAAUH,KAAKC,MAAMG,MAAMC,Q,+BAG/B,WAUP,OACE,oCACE,kBAAC,SAAD,KAAQ,iEACR,4CACA,4BAXwB,OAAtB,EAAKJ,MAAMK,OACN,EAAKL,MAAMK,OAAOC,KAAK,SAACC,EAAOC,GAAR,OAAc,wBAAIb,IAAKa,GAAID,EAAME,SAExD,W,GAbMC,aAiCNC,uBALS,SAAC,GAEvB,MAAO,CAAEN,OAFkC,EAAlBO,YACjBP,UAI8B,CAAEJ,oBAAiBC,eAA5CS,CAAyDb","file":"27.84863f00.js","sourcesContent":["//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","import React, { Component } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { fetchPizzasList } from '../actions/pizzasActions';\nimport { updateNav } from '../actions/navActions'\n\nclass Pizzas extends Component {\n\n  componentWillMount() {\n    this.props.fetchPizzasList();\n    this.props.updateNav(this.props.match.path);\n  }\n\n  render() {\n\n    const showPizzas = () => {\n      if (this.props.pizzas !== null) {\n        return this.props.pizzas.map( (pizza, i) => <li key={i}>{pizza.name}</li>);\n      } else {\n        return null;\n      }\n    };\n\n    return (\n      <>\n        <Helmet><title>Pizza's Pizzeria Pizza's List</title></Helmet>\n        <h1>Pizza's List</h1>\n        <ul>{showPizzas()}</ul>\n      </>\n    );\n  }\n\n};\n\nconst mapStateToProps = ({ pizzasState }) => {\n  const { pizzas } = pizzasState;\n  return { pizzas };\n};\n\nexport default connect(mapStateToProps, { fetchPizzasList, updateNav })(Pizzas);\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./shared/actions/secondaryNavActions.js","webpack:///./shared/sagas/navUpdateSaga.js","webpack:///./shared/sagas/secondaryNavSaga.js","webpack:///./shared/sagas/pizzasListSaga.js","webpack:///./shared/sagas/rootSaga.js","webpack:///./client/index.js","webpack:///./shared/store/configureStore.js","webpack:///./shared/containers/index.js","webpack:///./shared/reducers/pizzasReducer.js","webpack:///./shared/reducers/navReducer.js","webpack:///./shared/reducers/secondaryNavReducer.js","webpack:///./shared/reducers/index.js"],"names":["SECONDARY_NAV_ACTIVATE_REQUESTED","SECONDARY_NAV_ACTIVATE_SUCCEEDED","SECONDARY_NAV_ACTIVATE_FAILED","SECONDARY_NAV_LOAD_VIDEO_REQUESTED","SECONDARY_NAV_LOAD_VIDEO_SUCCEEDED","SECONDARY_NAV_LOAD_VIDEO_FAILED","openSecondaryNav","payload","type","loadSecondaryNavLinkVideo","updateNav","updateMainNavSaga","currentUrl","length","replace","put","UPDATE_NAV_SUCCEEDED","UPDATE_NAV_FAILED","takeLatest","UPDATE_NAV_REQUESTED","updateSecondaryNav","updateSecondaryNavVideo","updateSecondaryNavSaga","updateSecondaryNavVideoSaga","fetchPizzas","fetchPizzasListSaga","fetchPizzasFromApi","fetch","then","response","ok","console","log","json","e","call","pizzas","FETCH_PIZZA_LIST_SUCCEEDED","FETCH_PIZZA_LIST_FAILED","FETCH_PIZZA_LIST_REQUESTED","rootSaga","all","window","__PRELOADED_STATE__","store","configureStore","serialize","runSaga","loadableReady","hydrate","document","getElementById","preloadedState","composeEnhancers","global","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","sagaMonitor","reduxMiddlewares","createStore","rootReducer","applyMiddleware","run","close","dispatch","END","MainSiteHeader","loadable","SecondaryNav","App","props","exact","path","component","initialState","pizzasReducer","state","merge","activeMainNav","navReducer","isOpen","secondaryNavVideo","secondaryNavReducer","combineReducers","pizzasState","navState","secondaryNavState"],"mappings":"mJAAA,gRAAO,IAAMA,EAAmC,mCACnCC,EAAmC,mCACnCC,EAAgC,gCAEhCC,EAAqC,qCACrCC,EAAqC,qCACrCC,EAAkC,kCAElCC,EAAmB,SAAAC,GAAO,MAAK,CAACC,KAAM,mCAAoCD,YAE1EE,EAA4B,SAAAF,GAAO,MAAK,CAACC,KAAM,qCAAsCD,a,kOCFxFG,G,WAgBOC,GAhBjB,SAAUD,EAAV,4EAII,OAJJ,EAAqBF,KAAMD,EAA3B,EAA2BA,QACnBK,EAAaL,EAAQM,OAAS,EAAIN,EAAQO,QAAQ,IAAK,IAAM,OADrE,kBAIUC,YAAI,CACRP,KAAMQ,IACNT,QAASK,IANf,8BASI,OATJ,mCASUG,YAAI,CACRP,KAAMS,IACNV,QAAS,EAAF,KAXb,qDAgBO,SAAUI,IAAV,iEACL,OADK,SACCO,YAAWC,IAAsBT,GADlC,uC,2BCbGU,G,WAcAC,G,WAcOC,G,WAIAC,GAhCjB,SAAUH,EAAV,0EAEI,OAFJ,EAA+BZ,KAAMD,EAArC,EAAqCA,QAArC,kBAEUQ,YAAI,CACRP,KAAMP,IACNM,YAJN,8BAOI,OAPJ,mCAOUQ,YAAI,CACRP,KAAMN,IACNK,QAAS,EAAF,KATb,qDAcA,SAAUc,EAAV,0EAEI,OAFJ,EAAoCb,KAAMD,EAA1C,EAA0CA,QAA1C,kBAEUQ,YAAI,CACRP,KAAMJ,IACNG,YAJN,8BAOI,OAPJ,mCAOUQ,YAAI,CACRP,KAAMH,IACNE,QAAS,EAAF,KATb,qDAcO,SAAUe,IAAV,iEACL,OADK,SACCJ,YAAWlB,IAAkCoB,GAD9C,uCAIA,SAAUG,IAAV,iEACL,OADK,SACCL,YAAWf,IAAoCkB,GADhD,uC,gDCpBGG,G,WAoBOC,GAhCXC,EAAqB,kBAAMC,IAFrB,6CAGTC,MAAM,SAAAC,GACL,GAAKA,EAASC,GAIZ,OADAC,QAAQC,IAAI,aAAcH,GACnBA,EAASI,OAHhBF,QAAQC,IAAI,YAMfJ,MAAM,SAAAC,GAAQ,OAAIA,KATY,OAUxB,SAAAK,GAAC,OAAIH,QAAQC,IAAI,mBAAoBE,OAE9C,SAAUV,IAAV,uEAEmB,OAFnB,kBAEyBW,YAAKT,GAF9B,OAMI,OAJMU,EAFV,OAIIL,QAAQC,IAAI,UAAWI,GAJ3B,SAMUrB,YAAI,CACNP,KAAM6B,IACN9B,QAAS6B,IARjB,8BAaI,OAbJ,yBAWIL,QAAQC,IAAI,UAAZ,MAXJ,UAaUjB,YAAI,CACRP,KAAM8B,IACN/B,QAAS,EAAF,KAfb,qDAoBO,SAAUkB,IAAV,iEACL,OADK,SACCP,YAAWqB,IAA4Bf,GADxC,uC,eCrCkBgB,GAAV,SAAUA,IAAV,iEACb,OADa,SACPC,YAAI,CACRN,YAAKxB,GACLwB,YAAKb,GACLa,YAAKZ,GACLY,YAAKV,KALM,uC,uBCIRiB,OAAOC,oBAEd,IAAMC,EAAQC,YAAgBC,IAAUJ,OAAOC,sBAE/CC,EAAMG,QAAQP,GAEdQ,aACE,WACEC,kBACE,kBAAC,IAAD,CAAUL,MAAQA,GAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,QAGJM,SAASC,eAAe,Y,mCCxB9B,gEAsBeN,IAjBQ,SAAAO,GACrB,IAAMC,EAAmBC,EAAOC,sCAAwCC,IAClEC,EAAiBC,YAAqB,CAAEC,kBACxCC,EAAmB,CAAEH,GAErBb,EAAQiB,YACZC,IACAV,EACAC,EAAkBU,IAAe,WAAf,EAAmBH,KAMvC,OAHAhB,EAAMG,QAAUU,EAAeO,IAC/BpB,EAAMqB,MAAQ,kBAAMrB,EAAMsB,SAASC,MAE5BvB,K,wDCnBT,2FASMwB,EAAiBC,YAAS,CAAD,mKAAE,kBAAM,yDAAR,uPACzBC,EAAeD,YAAS,CAAD,iLAAE,kBAAM,gEAAR,uPAEvBE,EAAM,SAANA,EAAMC,GAQV,OACE,oCACE,kBAACJ,EAAD,MACA,kBAACE,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,IAAIC,UAAYN,YAAS,CAAD,4IAAE,kBAAM,+EAAR,yPAC1C,kBAAC,IAAD,CAAOK,KAAK,UAAUC,UAAYN,YAAS,CAAD,8IAAE,kBAAM,8EAAR,4PAYnCE,O,0EC/BTK,EAAe,CACnBxC,OAAQ,MAgBKyC,EAbO,WAA+C,IAA7CC,EAA6C,uDAArCF,EAAqC,yCAArBpE,EAAqB,EAArBA,KAAMD,EAAe,EAAfA,QACpD,OAAQC,GACN,KAAK8B,IAGL,KAAKD,IACH,OAAO0C,gBAAO,GAAID,EAAO,CAAE1C,OAAQ7B,IAErC,QACE,OAAOuE,I,YCZPF,EAAe,CACnBI,cAAe,MAkBFC,EAfI,WAA+C,IAA7CH,EAA6C,uDAArCF,EAAqC,yCAArBpE,EAAqB,EAArBA,KAAMD,EAAe,EAAfA,QAEjD,OAAQC,GACN,KAAKS,IAGL,KAAKD,IACH,OAAO+D,gBAAM,GAAID,EAAO,CAAEE,cAAezE,IAE3C,QACE,OAAOuE,I,YCbPF,EAAe,CACnBM,QAAQ,EACRC,kBAAmB,MAwBNC,EArBa,WAA+C,IAA7CN,EAA6C,uDAArCF,EAAqC,yCAArBpE,EAAqB,EAArBA,KAAMD,EAAe,EAAfA,QAE1D,OAAQC,GACN,KAAKN,IAGL,KAAKD,IACH,OAAO8E,gBAAM,GAAID,EAAO,CAAEI,OAAQ3E,IAEpC,KAAKF,IAGL,KAAKD,IACH,OAAO2E,gBAAM,GAAID,EAAO,CAAEK,kBAAmB5E,IAE/C,QACE,OAAOuE,ICzBEO,gBAAgB,CAC7BC,YAAaT,EACbU,SAAUN,EACVO,kBAAmBJ,M","file":"35.03f38952.js","sourcesContent":["export const SECONDARY_NAV_ACTIVATE_REQUESTED = 'SECONDARY_NAV_ACTIVATE_REQUESTED';\nexport const SECONDARY_NAV_ACTIVATE_SUCCEEDED = 'SECONDARY_NAV_ACTIVATE_SUCCEEDED';\nexport const SECONDARY_NAV_ACTIVATE_FAILED = 'SECONDARY_NAV_ACTIVATE_FAILED';\n\nexport const SECONDARY_NAV_LOAD_VIDEO_REQUESTED = 'SECONDARY_NAV_LOAD_VIDEO_REQUESTED';\nexport const SECONDARY_NAV_LOAD_VIDEO_SUCCEEDED = 'SECONDARY_NAV_LOAD_VIDEO_SUCCEEDED';\nexport const SECONDARY_NAV_LOAD_VIDEO_FAILED = 'SECONDARY_NAV_LOAD_VIDEO_FAILED';\n\nexport const openSecondaryNav = payload => ({type: 'SECONDARY_NAV_ACTIVATE_REQUESTED', payload});\n\nexport const loadSecondaryNavLinkVideo = payload => ({type: 'SECONDARY_NAV_LOAD_VIDEO_REQUESTED', payload});\n","import { call, put, takeLatest } from 'redux-saga/effects';\n\nimport {\n  UPDATE_NAV_REQUESTED,\n  UPDATE_NAV_SUCCEEDED,\n  UPDATE_NAV_FAILED\n} from './../actions/navActions';\n\nfunction* updateNav({type, payload}) {\n  const currentUrl = payload.length > 1 ? payload.replace('/', '') : 'home';\n\n  try {\n    yield put({\n      type: UPDATE_NAV_SUCCEEDED,\n      payload: currentUrl\n    });\n  } catch (error) {\n    yield put({\n      type: UPDATE_NAV_FAILED,\n      payload: error\n    });\n  }\n}\n\nexport function* updateMainNavSaga() {\n  yield takeLatest(UPDATE_NAV_REQUESTED, updateNav);\n}\n","import { call, put, takeLatest } from 'redux-saga/effects';\n\nimport {\n    SECONDARY_NAV_ACTIVATE_REQUESTED,\n    SECONDARY_NAV_ACTIVATE_SUCCEEDED,\n    SECONDARY_NAV_ACTIVATE_FAILED,\n    SECONDARY_NAV_LOAD_VIDEO_REQUESTED,\n    SECONDARY_NAV_LOAD_VIDEO_SUCCEEDED,\n    SECONDARY_NAV_LOAD_VIDEO_FAILED\n} from './../actions/secondaryNavActions';\n\nfunction* updateSecondaryNav({ type, payload }) {\n  try {\n    yield put({\n      type: SECONDARY_NAV_ACTIVATE_SUCCEEDED,\n      payload\n    });\n  } catch (error) {\n    yield put({\n      type: SECONDARY_NAV_ACTIVATE_FAILED,\n      payload: error\n    });\n  }\n};\n\nfunction* updateSecondaryNavVideo({ type, payload }) {\n  try {\n    yield put({\n      type: SECONDARY_NAV_LOAD_VIDEO_SUCCEEDED,\n      payload\n    });\n  } catch (error) {\n    yield put({\n      type: SECONDARY_NAV_LOAD_VIDEO_FAILED,\n      payload: error\n    });\n  }\n};\n\nexport function* updateSecondaryNavSaga() {\n  yield takeLatest(SECONDARY_NAV_ACTIVATE_REQUESTED, updateSecondaryNav);\n}\n\nexport function* updateSecondaryNavVideoSaga() {\n  yield takeLatest(SECONDARY_NAV_LOAD_VIDEO_REQUESTED, updateSecondaryNavVideo);\n}\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport fetch from 'isomorphic-fetch';\n\nimport {\n  FETCH_PIZZA_LIST_REQUESTED,\n  FETCH_PIZZA_LIST_SUCCEEDED,\n  FETCH_PIZZA_LIST_FAILED\n} from './../actions/pizzasActions';\n\nconst url = 'http://jsonplaceholder.typicode.com/users';\n\nconst fetchPizzasFromApi = () => fetch(url)\n  .then( response => {\n    if (!response.ok) {\n      console.log('error');\n    } else {\n      console.log('response: ', response);\n      return response.json();\n    }\n  })\n  .then( response => response)\n  .catch(e => console.log('error on fetch: ', e));\n\nfunction* fetchPizzas() {\n  try {\n    const pizzas = yield call(fetchPizzasFromApi);\n\n    console.log('pizzas:', pizzas);\n\n    yield put({\n        type: FETCH_PIZZA_LIST_SUCCEEDED,\n        payload: pizzas\n      });\n  } catch (error) {\n    console.log('error: ', error);\n\n    yield put({\n      type: FETCH_PIZZA_LIST_FAILED,\n      payload: error\n    });\n  }\n}\n\nexport function* fetchPizzasListSaga() {\n  yield takeLatest(FETCH_PIZZA_LIST_REQUESTED, fetchPizzas);\n};\n","import { all, call } from 'redux-saga/effects';\n\nimport { updateMainNavSaga } from './navUpdateSaga';\nimport { updateSecondaryNavSaga, updateSecondaryNavVideoSaga } from './secondaryNavSaga';\nimport { fetchPizzasListSaga } from './pizzasListSaga';\n\nexport default function* rootSaga() {\n  yield all([\n    call(updateMainNavSaga),\n    call(updateSecondaryNavSaga),\n    call(updateSecondaryNavVideoSaga),\n    call(fetchPizzasListSaga)\n  ]);\n}\n","import React from 'react';\nimport { hydrate } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport serialize from 'serialize-javascript';\nimport { loadableReady } from '@loadable/component';\nimport configureStore from '../shared/store/configureStore';\nimport rootSaga from '../shared/sagas/rootSaga';\nimport App from '../shared/containers';\n\ndelete window.__PRELOADED_STATE__;\n\nconst store = configureStore( serialize(window.__PRELOADED_STATE__) );\n\nstore.runSaga(rootSaga);\n\nloadableReady(\n  () => {\n    hydrate(\n      <Provider store={ store }>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </Provider>,\n      document.getElementById('app')\n    )\n  }\n);\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport createSagaMiddleware, { END } from 'redux-saga';\nimport sagaMonitor from '@redux-saga/simple-saga-monitor';\nimport rootReducer from '../reducers';\n\nconst configureStore = preloadedState => {\n  const composeEnhancers = global.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const sagaMiddleware = createSagaMiddleware({ sagaMonitor });\n  const reduxMiddlewares = [ sagaMiddleware ];\n\n  const store = createStore(\n    rootReducer,\n    preloadedState,\n    composeEnhancers( applyMiddleware(...reduxMiddlewares) )\n  );\n\n  store.runSaga = sagaMiddleware.run;\n  store.close = () => store.dispatch(END);\n\n  return store;\n};\n\nexport default configureStore;\n","// import React, { useState, useEffect } from 'react';\nimport React from 'react';\n// import { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport loadable from '@loadable/component';\n\nimport './assets/css/reset.css';\nimport './assets/css/site-wide.css';\n\nconst MainSiteHeader = loadable( () => import('./../components/main-site-header') );\nconst SecondaryNav = loadable( () => import('./../components/main-site-header/secondary-nav') );\n\nconst App = props => {\n\n  // const [ showSecondaryNav, setShowSecondaryNav ] = useState(false);\n\n  // useEffect(() => {\n  //   setShowSecondaryNav(props.isOpen);\n  // }, [props.isOpen]);\n\n  return (\n    <>\n      <MainSiteHeader />\n      <SecondaryNav />\n      <Switch>\n        <Route exact path=\"/\" component={ loadable( () => import('./Home') ) } />\n        <Route path=\"/pizzas\" component={ loadable( () => import('./Pizzas') ) } />\n      </Switch>\n    </>\n  );\n}\n\n// const mapStateToProps = ({ secondaryNavState }) => {\n//   const { isOpen } = secondaryNavState;\n//   return { isOpen };\n// };\n\n// export default connect(mapStateToProps)(App);\nexport default App;\n\n// { showSecondaryNav ? <SecondaryNav /> : null }\n","import { merge } from 'lodash/object';\n\nimport {\n  FETCH_PIZZA_LIST_SUCCEEDED,\n  FETCH_PIZZA_LIST_FAILED\n} from './../actions/pizzasActions';\n\nconst initialState = {\n  pizzas: null\n};\n\nconst pizzasReducer = ( state = initialState, { type, payload } ) => {\n  switch (type) {\n    case FETCH_PIZZA_LIST_FAILED:\n      return merge({}, state, { pizzas: payload });\n\n    case FETCH_PIZZA_LIST_SUCCEEDED:\n      return merge( {}, state, { pizzas: payload } );\n\n    default:\n      return state;\n  }\n};\n\nexport default pizzasReducer;\n","import { merge } from 'lodash/object';\n\nimport {\n  UPDATE_NAV_SUCCEEDED,\n  UPDATE_NAV_FAILED\n} from './../actions/navActions';\n\n\nconst initialState = {\n  activeMainNav: null\n};\n\nconst navReducer = ( state = initialState, { type, payload } ) => {\n\n  switch (type) {\n    case UPDATE_NAV_FAILED:\n      return merge({}, state, { activeMainNav: payload });\n\n    case UPDATE_NAV_SUCCEEDED:\n      return merge({}, state, { activeMainNav: payload });\n\n    default:\n      return state;\n  }\n\n};\n\nexport default navReducer;\n","import { merge } from 'lodash/object';\n\nimport {\n  SECONDARY_NAV_ACTIVATE_SUCCEEDED,\n  SECONDARY_NAV_ACTIVATE_FAILED,\n  SECONDARY_NAV_LOAD_VIDEO_SUCCEEDED,\n  SECONDARY_NAV_LOAD_VIDEO_FAILED\n} from './../actions/secondaryNavActions';\n\nconst initialState = {\n  isOpen: false,\n  secondaryNavVideo: null\n};\n\nconst secondaryNavReducer = ( state = initialState, { type, payload } ) => {\n\n  switch (type) {\n    case SECONDARY_NAV_ACTIVATE_FAILED:\n      return merge({}, state, { isOpen: payload });\n\n    case SECONDARY_NAV_ACTIVATE_SUCCEEDED:\n      return merge({}, state, { isOpen: payload });\n\n    case SECONDARY_NAV_LOAD_VIDEO_FAILED:\n      return merge({}, state, { secondaryNavVideo: payload });\n\n    case SECONDARY_NAV_LOAD_VIDEO_SUCCEEDED:\n      return merge({}, state, { secondaryNavVideo: payload });\n\n    default:\n      return state;\n  }\n\n};\n\nexport default secondaryNavReducer;\n","import { combineReducers } from 'redux';\nimport pizzasReducer from './pizzasReducer';\nimport navReducer from './navReducer';\nimport secondaryNavReducer from './secondaryNavReducer';\n\nexport default combineReducers({\n  pizzasState: pizzasReducer,\n  navState: navReducer,\n  secondaryNavState: secondaryNavReducer\n});\n"],"sourceRoot":""}